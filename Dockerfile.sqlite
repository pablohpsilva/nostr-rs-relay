# Simple Dockerfile for nostr-rs-relay that avoids SQLite dependency conflicts
# Important: This is a simplified build that omits some features but should work for testing
FROM debian:bullseye as builder

# Install build dependencies
RUN apt-get update && \
    apt-get install -y \
    curl \
    git \
    build-essential \
    pkg-config \
    libssl-dev \
    sqlite3 \
    libsqlite3-dev \
    cmake \
    protobuf-compiler && \
    rm -rf /var/lib/apt/lists/*

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Set up the project
WORKDIR /app

# Clone a specific version of the repo that's known to work
RUN git clone https://git.sr.ht/~gheartsfield/nostr-rs-relay .
RUN git checkout 0.8.9

# Build the application with just the basic features
# This version doesn't use feature flags like newer versions
RUN cargo build --release

FROM debian:bullseye-slim

ARG APP=/usr/src/app
ARG APP_DATA=/usr/src/app/db

# Install minimal runtime dependencies
RUN apt-get update && \
    apt-get install -y ca-certificates tzdata && \
    rm -rf /var/lib/apt/lists/*

# Set up the environment
EXPOSE 8080
ENV TZ=Etc/UTC \
    APP_USER=appuser

# Create a non-root user and app directories
RUN groupadd $APP_USER && \
    useradd -g $APP_USER $APP_USER && \
    mkdir -p ${APP} && \
    mkdir -p ${APP_DATA}

# Copy the compiled binary
COPY --from=builder /app/target/release/nostr-rs-relay ${APP}/nostr-rs-relay

# Set permissions
RUN chown -R $APP_USER:$APP_USER ${APP}

# Switch to non-root user
USER $APP_USER
WORKDIR ${APP}

# Configure environment
ENV RUST_LOG=info,nostr_rs_relay=info
ENV APP_DATA=${APP_DATA}

# Run the application
CMD ["./nostr-rs-relay", "--db", "${APP_DATA}"] 